############### TREESS #######################
#### Library tree is used
install.packages("tree")
library(tree)
library(ISLR)
fix(Carseats)
attach(Carseats)

?ifelse
high <- ifelse(Sales > 8, "Yes", "No")
?data.frame
Carseats <- data.frame(Carseats, high)
?tree
str(Carseats)
tree.carseats <- tree(high~.-Sales, Carseats)
summary(tree.carseats)
plot(tree.carseats)
text(tree.carseats, pretty = 0)
tree.carseats

# Test error
set.seed(2)
train = sample(nrow(Carseats), 200)
Carseats.test = Carseats[-train,]
high.test <- high[-train]
tree.carseats = tree(high~. -Sales, Carseats, subset = train)
?predict
tree.pred = predict(tree.carseats, Carseats.test, type = "class")
table(tree.pred, high.test)
(104+50)/200 * 100

?cv.tree
set.seed(3)
cv.carseats <- cv.tree(tree.carseats, FUN = prune.misclass)
names(cv.carseats)
cv.carseats$size
cv.carseats$dev
cv.carseats$k
# tree with 21 terminal nodes results in lowest CV error rate, with 74 CV errors
par(mfrow=c(1,2))
plot(cv.carseats$size, cv.carseats$dev, type = "b")
?plot
plot(cv.carseats$k, cv.carseats$dev, type = "b")
?prune.misclass
# Pruning the tree
prune.carseats <- prune.misclass(tree.carseats, best = 21)
plot(prune.carseats)
text(prune.carseats, pretty = 0)
?text
prune.carseats
# effectiveness of pruned tree on Test data
tree.pred = predict(prune.carseats, Carseats.test, type = "class")
table(tree.pred, high.test)
(104+53)/(200) * 100
